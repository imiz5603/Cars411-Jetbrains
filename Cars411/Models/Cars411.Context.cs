//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cars411.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Cars411Entities : DbContext
    {
        public Cars411Entities()
            : base("name=Cars411Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Access_Level> Access_Level { get; set; }
        public DbSet<Access_Level_Menu> Access_Level_Menu { get; set; }
        public DbSet<Menu> Menus { get; set; }
        public DbSet<tblBlog> tblBlogs { get; set; }
        public DbSet<tblMake> tblMakes { get; set; }
        public DbSet<tblUser> tblUsers { get; set; }
        public DbSet<tblYear> tblYears { get; set; }
        public DbSet<tblActivationCode> tblActivationCodes { get; set; }
        public DbSet<tblSetting> tblSettings { get; set; }
        public DbSet<tblPost> tblPosts { get; set; }
        public DbSet<tblComment> tblComments { get; set; }
        public DbSet<tblModel> tblModels { get; set; }
    
        public virtual ObjectResult<getAccessMenusUser_Result> getAccessMenusUser(Nullable<int> user_ID)
        {
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAccessMenusUser_Result>("getAccessMenusUser", user_IDParameter);
        }
    
        public virtual ObjectResult<getCarRating_Result2> getCarRating(Nullable<int> postID, Nullable<int> modeID, Nullable<int> makeID, Nullable<int> yearID)
        {
            var postIDParameter = postID.HasValue ?
                new ObjectParameter("PostID", postID) :
                new ObjectParameter("PostID", typeof(int));
    
            var modeIDParameter = modeID.HasValue ?
                new ObjectParameter("ModeID", modeID) :
                new ObjectParameter("ModeID", typeof(int));
    
            var makeIDParameter = makeID.HasValue ?
                new ObjectParameter("MakeID", makeID) :
                new ObjectParameter("MakeID", typeof(int));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("yearID", yearID) :
                new ObjectParameter("yearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCarRating_Result2>("getCarRating", postIDParameter, modeIDParameter, makeIDParameter, yearIDParameter);
        }
    
        public virtual ObjectResult<getBestCarRating_Result2> getBestCarRating(Nullable<int> safety, Nullable<int> comfort, Nullable<int> reliability, Nullable<int> yearID, string cwhere)
        {
            var safetyParameter = safety.HasValue ?
                new ObjectParameter("Safety", safety) :
                new ObjectParameter("Safety", typeof(int));
    
            var comfortParameter = comfort.HasValue ?
                new ObjectParameter("Comfort", comfort) :
                new ObjectParameter("Comfort", typeof(int));
    
            var reliabilityParameter = reliability.HasValue ?
                new ObjectParameter("Reliability", reliability) :
                new ObjectParameter("Reliability", typeof(int));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("yearID", yearID) :
                new ObjectParameter("yearID", typeof(int));
    
            var cwhereParameter = cwhere != null ?
                new ObjectParameter("cwhere", cwhere) :
                new ObjectParameter("cwhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBestCarRating_Result2>("getBestCarRating", safetyParameter, comfortParameter, reliabilityParameter, yearIDParameter, cwhereParameter);
        }
    }
}
